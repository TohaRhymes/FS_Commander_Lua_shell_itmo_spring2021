---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by toharhymes.
--- DateTime: 25.05.2021 0:23
---


function istable(t)
    return type(t) == "table"
end
function expandObjFull(o, p)
    for k, v in pairs(o) do
        if istable(v) then
            print(p .. "" .. k .. " = {")
            expandObjFull(v, p .. " ")
            print(p .. "}")
        else
            print(p .. "" .. k .. " = " .. v)
        end
    end
end


printf = function(s, ...)
    return io.write(s:format(...))
end

function split (inputstr, sep)
    if sep == nil then
        sep = "%s"
    end
    local t={}
    for str in string.gmatch(inputstr, "([^"..sep.."]+)") do
        table.insert(t, str)
    end
    return t
end



function print_help()
    print("\t* To run program in list mode use `list` key.")
    print("\t* To run it in shell mode use `commander` key and specify drive or deviceDescriptor.\n")

end

function print_info(o)
    print("System partition:\nname\t\tsize\ttype")
    for k, v in pairs(o) do
        print(v["name"] .. "\t" .. v["size"] .. " " .. v["metric"] .. "\t" .. v["type"])
    end
end

function print_ls(o)
    if o==nil then
        print("No such file or directory.")
    elseif type(o)=="string" then
        print()
    else
        for k, v in pairs(o) do
            print(v["type"] .. "\t" .. v["name"])
        end
    end
end

function shell(genius_lib, name)
    o = genius_lib:shell_check(name)
    if not o["is_okay"] then
        print("Incorrect device name. Please, check and try again.")
        return 1
    end
    print("NTFS filesystem detected.")

    exit_flag = false
    while not exit_flag do
        pwd_path = genius_lib:shell_pwd()["pwd"]
        printf("%s$ ", pwd_path)
        input_string = split(io.read(), " ")
        if input_string[1] == "" or input_string[1] == nil then
            goto continue
        elseif input_string[1] == "exit" then
            exit_flag = true
            print("Terminating...")
        elseif input_string[1] == "help" then
            print("--------------------------------------------------------")
            print("COMMAND\t\t| DESCRIPTION")
            print("----------------| --------------------------------------")
            print("cd [directory]\t| change working directory")
            print("pwd\t\t| print full path to working directory")
            print("cp [from] [to]\t| copy dir or file from mounted device")
            print("ls/ll\t\t| show working directory elements")
            print("exit\t\t| terminate program")
            print("help\t\t| print help")
            print("--------------------------------------------------------")
        elseif input_string[1] == "pwd" then
            print(genius_lib:shell_pwd()["pwd"])
        elseif input_string[1] == "ls" or input_string[1] == "ll" then
            o = genius_lib:shell_ls(input_string[2])
            print_ls(o)
        elseif input_string[1] == "cd" then
            if input_string[2] ~= nil then
                printf("%s", genius_lib:shell_cd(input_string[2])["cd"])
            else
                print("cd command requires path argument.")
            end
        else
            print("Wrong command. Enter 'help' to get help.")
        end
        :: continue ::
    end
end

genius_lib = require("lib_ntfs")
if arg[1] == "help" then
    print_help()
    return 0
end
if arg[1] == "list" then
    o = genius_lib:info()
    print_info(o)
    return 0
end
if arg[1] == "commander" and arg[2] ~= nil then
    shell(genius_lib, arg[2])
    return 0
end
print("Incorrect command line arguments.");
print_help()
return 0


--function istable(t)
--    return type(t) == "table"
--end
--function expandObjFull(o, p)
--    for k, v in pairs(o) do
--        if istable(v) then
--            print(p .. "" .. k .. " = {")
--            expandObjFull(v, p .. " ")
--            print(p .. "}")
--        else
--            print(p .. "" .. k .. " = " .. v)
--        end
--    end
--end
